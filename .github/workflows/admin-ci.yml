name: Admin App CI

on:
  push:
    branches: [main]
    paths:
      - 'adminapp/**'
      - '.github/workflows/admin-ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'adminapp/**'
      - '.github/workflows/admin-ci.yml'

env:
  NODE_VERSION: '20'

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./adminapp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './adminapp/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Type check
        run: npm run build

      - name: Check for unused dependencies
        run: npx depcheck --ignores="@types/*,vite,typescript"

  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./adminapp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './adminapp/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Run tests
        run: npm test
        if: hashFiles('./adminapp/package.json') != '' && contains(fromJson(readFile('./adminapp/package.json')).scripts, 'test')

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: admin-build
          path: ./adminapp/dist/
          retention-days: 7

  matrix-test:
    name: Matrix Testing
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: ['18', '20', '22']
    defaults:
      run:
        working-directory: ./adminapp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './adminapp/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./adminapp

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './adminapp/package-lock.json'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=high

      - name: Check for known vulnerabilities
        run: npx better-npm-audit audit --level high