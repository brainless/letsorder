name: Admin App CI/CD

on:
  push:
    branches: [ main, develop ]
    paths: [ 'adminapp/**' ]
  pull_request:
    branches: [ main ]
    paths: [ 'adminapp/**' ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: Test Admin App
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./adminapp
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './adminapp/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        run: npm run lint
      
      - name: Run formatter check
        run: npx prettier --check src/**/*.{ts,tsx}
      
      - name: Run tests
        run: npm test
      
      - name: Run test coverage
        run: npm run test:coverage
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: github.event_name == 'push'
        with:
          file: ./adminapp/coverage/coverage-final.json
          flags: adminapp
          name: adminapp-coverage
          fail_ci_if_error: false

  build:
    name: Build Admin App
    runs-on: ubuntu-latest
    needs: test
    
    defaults:
      run:
        working-directory: ./adminapp
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './adminapp/package-lock.json'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL || 'http://localhost:8080' }}
          VITE_APP_URL: ${{ vars.VITE_APP_URL || 'http://localhost:3000' }}
          VITE_NODE_ENV: production
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: admin-build
          path: ./adminapp/dist
          retention-days: 30

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment: staging
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: admin-build
          path: ./adminapp/dist
      
      - name: Deploy to CloudFlare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: letsorder-admin-staging
          directory: ./adminapp/dist
          wranglerVersion: '3'

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment: production
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: admin-build
          path: ./adminapp/dist
      
      - name: Deploy to CloudFlare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: letsorder-admin
          directory: ./adminapp/dist
          wranglerVersion: '3'