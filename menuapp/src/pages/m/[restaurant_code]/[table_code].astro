---
import Layout from '../../../layouts/Layout.astro';
import MenuDisplay from '../../../components/MenuDisplay.astro';
import CartSummary from '../../../components/CartSummary.astro';
import FloatingCartIndicator from '../../../components/FloatingCartIndicator.astro';
import NotFound from '../../../components/NotFound.astro';
import NetworkError from '../../../components/NetworkError.astro';
import EmptyMenu from '../../../components/EmptyMenu.astro';

const { restaurant_code, table_code } = Astro.params;

// Validate required parameters
if (!restaurant_code || !table_code) {
  return Astro.redirect('/');
}

const pageTitle = `Menu - ${restaurant_code} - ${table_code}`;

// Script content with interpolated values
const scriptContent = `
console.log('[SCRIPT] Script is executing');

// Pass restaurant and table codes to the client
window.menuPageData = {
  restaurantCode: "${restaurant_code}",
  tableCode: "${table_code}"
};

console.log('[SCRIPT] menuPageData set:', window.menuPageData);

// Import and initialize menu display
console.log('[SCRIPT] Starting module import...');
import('/src/scripts/menu-display.ts').then((module) => {
  console.log('[SCRIPT] Module loaded successfully:', module);
  console.log('[SCRIPT] Available exports:', Object.keys(module));
  try {
    console.log('[SCRIPT] Initializing MenuDisplay...');
    // Try default export first, then named export
    const MenuDisplayClass = module.default || module.MenuDisplay;
    console.log('[SCRIPT] MenuDisplay class:', MenuDisplayClass);
    if (MenuDisplayClass) {
      new MenuDisplayClass();
      console.log('[SCRIPT] MenuDisplay initialized successfully');
    } else {
      console.error('[SCRIPT] MenuDisplay class not found in module exports');
    }
  } catch (error) {
    console.error('[SCRIPT] Failed to initialize MenuDisplay:', error);
  }
}).catch((error) => {
  console.error('[SCRIPT] Failed to load menu-display script:', error);
});

// Load performance monitor separately
import('/src/scripts/performance-monitor.ts').catch(() => {
  console.warn('Failed to load performance monitor script');
});
`;
---

<Layout title={pageTitle}>
  <!-- Menu will be loaded client-side -->
  <MenuDisplay />

  <!-- Cart Summary (Fixed at bottom on mobile, inline on desktop) -->
  <div class="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4 md:relative md:border-t-0 md:bg-transparent md:p-0 mt-8 z-30">
    <div class="max-w-md mx-auto">
      <CartSummary 
        showSpecialRequests={true}
        showCheckoutButton={true}
        className="md:shadow-sm"
      />
    </div>
  </div>

  <!-- Floating Cart Indicator (shows when cart has items) -->
  <FloatingCartIndicator position="bottom-right" />

  <!-- Spacer for fixed cart summary on mobile -->
  <div class="h-60 md:hidden"></div>

  <!-- Load menu display script with restaurant and table codes -->
  <script type="module" set:html={scriptContent}></script>
  
  <!-- Additional styles for AddToCartButton animations -->
  <style>
    .add-to-cart-container {
      display: inline-block;
      min-height: 32px;
    }

    .quantity-selector {
      display: none;
      align-items: center;
      height: 32px;
    }

    .quantity-selector.flex {
      display: flex;
    }

    .add-btn {
      height: 32px;
      min-width: 60px;
    }

    .quantity-btn:disabled {
      cursor: not-allowed;
    }

    /* Smooth transitions */
    .quantity-display {
      transition: all 0.2s ease;
    }

    /* Animation classes */
    @keyframes pulse {
      0%, 100% {
        transform: scale(1);
      }
      50% {
        transform: scale(1.05);
      }
    }

    .animate-pulse {
      animation: pulse 0.3s ease-in-out;
    }

    /* Toast notification styles */
    .toast {
      transform: translateY(-100%);
      opacity: 0;
      animation: slideDown 0.3s ease-out forwards;
    }

    @keyframes slideDown {
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }
  </style>
</Layout>
