---
import Layout from '../../../layouts/Layout.astro';

export async function getStaticPaths() {
  // For now, return an empty array to allow build completion
  // In a real implementation, this would fetch all restaurant/table combinations
  // or use server-side rendering instead
  return [];
}

const { restaurant_code, table_code } = Astro.params;

// TODO: Fetch menu data from API endpoint: GET /menu/{restaurant_code}/{table_code}
const menuData = {
  restaurant: {
    name: "Sample Restaurant",
    code: restaurant_code
  },
  table: {
    code: table_code,
    name: `Table ${table_code}`
  },
  sections: [
    {
      id: 1,
      name: "Starters",
      items: [
        {
          id: 1,
          name: "Caesar Salad",
          description: "Fresh romaine lettuce with parmesan and croutons",
          price: 12.99
        },
        {
          id: 2,
          name: "Garlic Bread",
          description: "Toasted bread with garlic butter",
          price: 8.99
        }
      ]
    },
    {
      id: 2,
      name: "Main Courses",
      items: [
        {
          id: 3,
          name: "Grilled Salmon",
          description: "Fresh Atlantic salmon with seasonal vegetables",
          price: 24.99
        },
        {
          id: 4,
          name: "Beef Steak",
          description: "Prime ribeye with mashed potatoes",
          price: 32.99
        }
      ]
    }
  ]
};

const pageTitle = `${menuData.restaurant.name} - ${menuData.table.name}`;
---

<Layout title={pageTitle}>
  <div class="space-y-6">
    <header class="text-center">
      <h1 class="text-2xl font-bold text-gray-900 mb-1">{menuData.restaurant.name}</h1>
      <p class="text-gray-600 text-sm mb-2">{menuData.table.name}</p>
      <p class="text-gray-500 text-xs">Restaurant: {restaurant_code} | Table: {table_code}</p>
    </header>

    <!-- Menu Sections -->
    {menuData.sections.map(section => (
      <section class="bg-white rounded-lg shadow-sm border border-gray-200 p-4">
        <h2 class="text-lg font-semibold text-gray-900 mb-4">{section.name}</h2>
        <div class="space-y-3">
          {section.items.map(item => (
            <div class="border-b border-gray-100 pb-3 last:border-b-0">
              <div class="flex justify-between items-start">
                <div class="flex-1">
                  <h3 class="font-medium text-gray-900">{item.name}</h3>
                  <p class="text-sm text-gray-600 mt-1">{item.description}</p>
                </div>
                <div class="ml-4 text-right">
                  <p class="font-semibold text-gray-900">${item.price}</p>
                  <button class="mt-1 bg-blue-600 hover:bg-blue-700 text-white text-xs font-medium py-1 px-3 rounded-md transition-colors">
                    Add
                  </button>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>
    ))}

    <!-- Order Summary (Fixed at bottom on mobile) -->
    <div class="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4 md:relative md:border-t-0 md:bg-transparent md:p-0">
      <div class="max-w-md mx-auto">
        <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 md:shadow-sm">
          <h2 class="text-lg font-semibold mb-3">Your Order</h2>
          <p class="text-gray-500 text-center py-2">No items in cart</p>
          <button class="w-full bg-green-600 hover:bg-green-700 text-white font-medium py-2 px-4 rounded-md mt-3 transition-colors" disabled>
            Place Order
          </button>
        </div>
      </div>
    </div>

    <!-- Spacer for fixed order summary on mobile -->
    <div class="h-32 md:hidden"></div>
  </div>
</Layout>
