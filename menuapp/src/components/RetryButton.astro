---
export interface Props {
  onclick?: string;
  className?: string;
  disabled?: boolean;
  text?: string;
}

const { 
  onclick = "window.location.reload()", 
  className = "", 
  disabled = false,
  text = "Try Again"
} = Astro.props;
---

<button
  type="button"
  onclick={onclick}
  disabled={disabled}
  class={`
    inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md
    text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500
    disabled:opacity-50 disabled:cursor-not-allowed disabled:bg-gray-400
    transition duration-150 ease-in-out
    ${className}
  `}
>
  {!disabled && (
    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
    </svg>
  )}
  {disabled && (
    <svg class="w-4 h-4 mr-2 animate-spin" fill="none" viewBox="0 0 24 24">
      <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
      <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
    </svg>
  )}
  {text}
</button>